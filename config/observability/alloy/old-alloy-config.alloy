local.file_match "applogs" {
    path_targets = [{"__path__" = "/tmp/app-logs/*"}]
    sync_period = "5s"
}

loki.write "local_loki" {
    endpoint {
        url = "http://loki:3100/loki/api/v1/push"
    }
}

loki.source.file "local_files" {
    targets    = local.file_match.applogs.targets
    forward_to = [loki.process.add_new_label.receiver]
}


loki.process "add_new_label" {
    stage.logfmt {
        mapping = {
            "extracted_level" = "level",
        }
    }

    stage.labels {
        values = {
            "level" = "extracted_level",
        }
    }

    stage.static_labels {
        values = {
            service_name = "apartment102",
        }
    }

     forward_to = [loki.write.local_loki.receiver]
}

otelcol.receiver.otlp "apartment102" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.processor.batch.example.input]
    logs    = [otelcol.processor.batch.example.input]
    traces  = [otelcol.processor.batch.example.input,]
  }
}

otelcol.processor.batch "example" {
  output {
    metrics = [otelcol.exporter.prometheus.local_prometheus.input]
    logs    = [otelcol.exporter.loki.local_loki.input]
    traces  = [otelcol.exporter.otlp.local_tempo.input]
  }
}

otelcol.exporter.prometheus "local_prometheus" {
        forward_to = [prometheus.remote_write.local_prometheus.receiver]
}

prometheus.remote_write "local_prometheus" {
    endpoint {
        url = "http://prometheus:9090/api/v1/write"
    }
}

otelcol.exporter.loki "local_loki" {
	forward_to = [loki.write.local_loki.receiver]
}

prometheus.scrape "example" {
  targets = [{
    __address__ = "alloy:12345",
  }]

  forward_to = [prometheus.remote_write.local_prometheus.receiver]
}

otelcol.exporter.otlp "local_tempo" {
    client {
        endpoint = "tempo:4317"
        tls {
    			insecure = true
    		}
      }
}